"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./auth.js":
/*!*****************!*\
  !*** ./auth.js ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   handlers: () => (/* binding */ handlers),\n/* harmony export */   providerMap: () => (/* binding */ providerMap),\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(middleware)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(middleware)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(middleware)/./node_modules/axios/lib/axios.js\");\n\n\n// import type { Provider } from 'next-auth/providers';\n// import type { AuthProvider } from '@toolpad/core';\n\nconst providers = [\n    (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n        credentials: {\n            email: {\n                label: \"Email Address\",\n                type: \"email\"\n            },\n            password: {\n                label: \"Password\",\n                type: \"password\"\n            }\n        },\n        authorize: async (c)=>{\n            return {\n                id: 1,\n                name: \"Test User\",\n                email: \"test@email.com\"\n            };\n            try {\n                // Send the credentials to your backend API\n                const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"http://localhost:3001/auth/login\", {\n                    email: c.email,\n                    password: c.password\n                });\n                // If the backend verifies the credentials, it will return a token or user details\n                if (response.status === 200 && response.data.token) {\n                    return {\n                        id: response.data.token.user.id,\n                        name: response.data.token.user.name,\n                        email: String(c.email),\n                        token: response.data.token.token,\n                        roles: response.data.token.user.role\n                    };\n                }\n                return null;\n            } catch (error) {\n                console.log(error);\n                return null;\n            }\n        }\n    })\n];\nconst providerMap = providers.map((provider)=>{\n    if (typeof provider === \"function\") {\n        const providerData = provider();\n        return {\n            id: providerData.id,\n            name: providerData.name\n        };\n    }\n    return {\n        id: provider.id,\n        name: provider.name\n    };\n});\nconst { handlers, auth, signIn, signOut } = (0,next_auth__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    providers,\n    secret: process.env.AUTH_SECRET,\n    pages: {\n        signIn: \"/auth/signin\"\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.roles = user.roles;\n            }\n            return token;\n        },\n        async session ({ session, token, user }) {\n            session.user.roles = token.roles;\n            return session;\n        },\n        authorized ({ auth: session, request: { nextUrl } }) {\n            const isLoggedIn = !!session?.user;\n            const isPublicPage = nextUrl.pathname.startsWith(\"/public\");\n            if (isPublicPage || isLoggedIn) {\n                return true;\n            }\n            return false; // Redirect unauthenticated users to login page\n        }\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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b250ZW50IjpbImltcG9ydCBOZXh0QXV0aCBmcm9tICduZXh0LWF1dGgnO1xuaW1wb3J0IENyZWRlbnRpYWxzIGZyb20gJ25leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHMnO1xuLy8gaW1wb3J0IHR5cGUgeyBQcm92aWRlciB9IGZyb20gJ25leHQtYXV0aC9wcm92aWRlcnMnO1xuLy8gaW1wb3J0IHR5cGUgeyBBdXRoUHJvdmlkZXIgfSBmcm9tICdAdG9vbHBhZC9jb3JlJztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5cbmNvbnN0IHByb3ZpZGVycyA9IFtcbiAgQ3JlZGVudGlhbHMoe1xuICAgIGNyZWRlbnRpYWxzOiB7XG4gICAgICBlbWFpbDogeyBsYWJlbDogJ0VtYWlsIEFkZHJlc3MnLCB0eXBlOiAnZW1haWwnIH0sXG4gICAgICBwYXNzd29yZDogeyBsYWJlbDogJ1Bhc3N3b3JkJywgdHlwZTogJ3Bhc3N3b3JkJyB9LFxuICAgIH0sXG4gICAgYXV0aG9yaXplOiBhc3luYyAoYykgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IDEsICBcbiAgICAgICAgbmFtZTogXCJUZXN0IFVzZXJcIiwgIFxuICAgICAgICBlbWFpbDogXCJ0ZXN0QGVtYWlsLmNvbVwiLFxuICAgICAgICAvLyBpbWFnZTogXCJodHRwczovL3cxLnBuZ3dpbmcuY29tL3BuZ3MvNzQzLzUwMC9wbmctdHJhbnNwYXJlbnQtY2lyY2xlLXNpbGhvdWV0dGUtbG9nby11c2VyLXVzZXItcHJvZmlsZS1ncmVlbi1mYWNpYWwtZXhwcmVzc2lvbi1ub3NlLWNhcnRvb24tdGh1bWJuYWlsLnBuZ1wiXG4gICAgICB9O1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gU2VuZCB0aGUgY3JlZGVudGlhbHMgdG8geW91ciBiYWNrZW5kIEFQSVxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMS9hdXRoL2xvZ2luJywge1xuICAgICAgICAgIGVtYWlsOiBjLmVtYWlsLFxuICAgICAgICAgIHBhc3N3b3JkOiBjLnBhc3N3b3JkXG4gICAgICAgIH0pO1xuICAgICAgICAvLyBJZiB0aGUgYmFja2VuZCB2ZXJpZmllcyB0aGUgY3JlZGVudGlhbHMsIGl0IHdpbGwgcmV0dXJuIGEgdG9rZW4gb3IgdXNlciBkZXRhaWxzXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCAmJiByZXNwb25zZS5kYXRhLnRva2VuKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlkOiByZXNwb25zZS5kYXRhLnRva2VuLnVzZXIuaWQsICBcbiAgICAgICAgICAgIG5hbWU6IHJlc3BvbnNlLmRhdGEudG9rZW4udXNlci5uYW1lLCAgXG4gICAgICAgICAgICBlbWFpbDogU3RyaW5nKGMuZW1haWwpLFxuICAgICAgICAgICAgdG9rZW46IHJlc3BvbnNlLmRhdGEudG9rZW4udG9rZW4sXG4gICAgICAgICAgICByb2xlczogcmVzcG9uc2UuZGF0YS50b2tlbi51c2VyLnJvbGUsXG4gICAgICAgICAgICAvLyBpbWFnZTogXCJodHRwczovL3cxLnBuZ3dpbmcuY29tL3BuZ3MvNzQzLzUwMC9wbmctdHJhbnNwYXJlbnQtY2lyY2xlLXNpbGhvdWV0dGUtbG9nby11c2VyLXVzZXItcHJvZmlsZS1ncmVlbi1mYWNpYWwtZXhwcmVzc2lvbi1ub3NlLWNhcnRvb24tdGh1bWJuYWlsLnBuZ1wiXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfVxuICB9KSxcbl07XG5cbmV4cG9ydCBjb25zdCBwcm92aWRlck1hcCA9IHByb3ZpZGVycy5tYXAoKHByb3ZpZGVyKSA9PiB7XG4gIGlmICh0eXBlb2YgcHJvdmlkZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjb25zdCBwcm92aWRlckRhdGEgPSBwcm92aWRlcigpO1xuICAgIHJldHVybiB7IGlkOiBwcm92aWRlckRhdGEuaWQsIG5hbWU6IHByb3ZpZGVyRGF0YS5uYW1lIH07XG4gIH1cbiAgcmV0dXJuIHsgaWQ6IHByb3ZpZGVyLmlkLCBuYW1lOiBwcm92aWRlci5uYW1lIH07XG59KTtcblxuZXhwb3J0IGNvbnN0IHsgaGFuZGxlcnMsIGF1dGgsIHNpZ25Jbiwgc2lnbk91dCB9ID0gTmV4dEF1dGgoe1xuICBwcm92aWRlcnMsXG4gIHNlY3JldDogcHJvY2Vzcy5lbnYuQVVUSF9TRUNSRVQsXG4gIHBhZ2VzOiB7XG4gICAgc2lnbkluOiAnL2F1dGgvc2lnbmluJyxcbiAgfSxcbiAgY2FsbGJhY2tzOiB7XG4gICAgYXN5bmMgand0KHsgdG9rZW4sIHVzZXIgfSkge1xuICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgdG9rZW4ucm9sZXMgPSB1c2VyLnJvbGVzO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRva2VuO1xuICAgIH0sXG4gICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuLCB1c2VyIH0pIHtcbiAgICAgIHNlc3Npb24udXNlci5yb2xlcyA9IHRva2VuLnJvbGVzO1xuICAgICAgcmV0dXJuIHNlc3Npb247XG4gICAgfSxcbiAgICBhdXRob3JpemVkKHsgYXV0aDogc2Vzc2lvbiwgcmVxdWVzdDogeyBuZXh0VXJsIH0gfSkge1xuICAgICAgY29uc3QgaXNMb2dnZWRJbiA9ICEhc2Vzc2lvbj8udXNlcjtcbiAgICAgIGNvbnN0IGlzUHVibGljUGFnZSA9IG5leHRVcmwucGF0aG5hbWUuc3RhcnRzV2l0aCgnL3B1YmxpYycpO1xuXG4gICAgICBpZiAoaXNQdWJsaWNQYWdlIHx8IGlzTG9nZ2VkSW4pIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmYWxzZTsgLy8gUmVkaXJlY3QgdW5hdXRoZW50aWNhdGVkIHVzZXJzIHRvIGxvZ2luIHBhZ2VcbiAgICB9LFxuICB9LFxufSk7XG4iXSwibmFtZXMiOlsiTmV4dEF1dGgiLCJDcmVkZW50aWFscyIsImF4aW9zIiwicHJvdmlkZXJzIiwiY3JlZGVudGlhbHMiLCJlbWFpbCIsImxhYmVsIiwidHlwZSIsInBhc3N3b3JkIiwiYXV0aG9yaXplIiwiYyIsImlkIiwibmFtZSIsInJlc3BvbnNlIiwicG9zdCIsInN0YXR1cyIsImRhdGEiLCJ0b2tlbiIsInVzZXIiLCJTdHJpbmciLCJyb2xlcyIsInJvbGUiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJwcm92aWRlck1hcCIsIm1hcCIsInByb3ZpZGVyIiwicHJvdmlkZXJEYXRhIiwiaGFuZGxlcnMiLCJhdXRoIiwic2lnbkluIiwic2lnbk91dCIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJBVVRIX1NFQ1JFVCIsInBhZ2VzIiwiY2FsbGJhY2tzIiwiand0Iiwic2Vzc2lvbiIsImF1dGhvcml6ZWQiLCJyZXF1ZXN0IiwibmV4dFVybCIsImlzTG9nZ2VkSW4iLCJpc1B1YmxpY1BhZ2UiLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./auth.js\n");

/***/ })

});