name: CI for Express.js Backend

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: myStrongPassword
          POSTGRES_DB: test_db  # We'll use a separate test database
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Adjust to the version you're using locally

      # Step 3: Install dependencies (inside backend directory)
      - name: Install dependencies
        run: npm install
        working-directory: ./backend  # Set the working directory for this step

      # Step 4: Wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready --host=localhost --port=5432 --username=postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      # Step 5: Set up environment variables for tests
      - name: Set environment variables
        run: echo "DB_HOST=localhost" >> $GITHUB_ENV

      - name: Export secrets
        run: |
          echo "DB_NAME=test_db" >> $GITHUB_ENV
          echo "DB_USER=postgres" >> $GITHUB_ENV
          echo "DB_PASSWORD=myStrongPassword" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV

      # Step 6: Run tests (inside backend directory)
      - name: Run Jest tests
        env:
          NODE_ENV: test
          DB_HOST: ${{ env.DB_HOST }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_PORT: ${{ env.DB_PORT }}
        run: npm test
        working-directory: ./backend  # Set the working directory for this step
